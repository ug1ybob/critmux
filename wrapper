#!/usr/bin/env python3
'''
critmux:
criu tmux docker wrapper
'''
import os
import grp
import signal
import stat
import subprocess

def system(cmd):
    '''Run system command, return the output'''
    return subprocess.check_call(cmd, shell=True)

def main():
    '''The main program body'''
    prvmode = "--unprivileged" if os.geteuid() != 0 else ""

    if os.geteuid() == 0:
        if os.path.exists("/var/run/docker.sock"):
            ds_stat = os.stat("/var/run/docker.sock")
            if stat.S_ISSOCK(ds_stat.st_mode):
                ds_gid = os.stat("/var/run/docker.sock").st_gid
                try:
                    grp.getgrgid(ds_gid)
                except KeyError:
                    system(f"groupadd -g {ds_gid} docker")

    if not os.path.isdir("/state"):
        os.mkdir("/state")

    if len(os.listdir("/state")) != 0:
        system(f"criu restore --images-dir /state --restore-detached --tcp-close {prvmode}")
        system("tmux attach")
    else:
        system("criu check 2>/dev/null")
        sid = os.environ.get("ct_session_s", "0")
        system(f"tmux new-session -d -s {sid}")
        pid = subprocess.check_output(["pidof", "tmux"]).decode("ascii").strip()
        system(f"criu dump -R --tree {pid} --images-dir /state {prvmode} && tmux attach")

    try:
        pid = subprocess.check_output(["pidof", "tmux"])
    except subprocess.CalledProcessError:
        pid = None
    if pid:
        pid = pid.decode("ascii").strip()
        print("Found TMUX. Freezing state.")
        system("rm -rf /state/*")
        system(f"criu dump --tree {pid} --tcp-close --images-dir /state {prvmode}")
    else:
        print("No TMUX found. Doing nothing.")

signal.signal(signal.SIGTERM, lambda signum, frame: system("tmux detach"))
main()
